name: Fail if Item has already the provided option field value
description: |
  This action stop the execution if the given item has the provided single select option value.
  An example can ben: an issue that has the Done status

inputs:
  pat_token:
    description: GitHub PAT token
    required: true
  organization:
    description: Organization login name
    required: true
  project_number:
    description: ProjectV2 Number
    required: true
  item_id:
    description: ProjectV2 Item ID
    required: true
  single_select_field_id:
    description: ProjectV2 Single Select Field ID
    required: true
  single_select_option_id:
    description: ProjectV2 Single Select Field Option ID
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v7
      with:
        github-token: ${{ inputs.pat_token }}
        script: |
          const org = "${{ inputs.organization }}";
          const p_number = ${{ inputs.project_number }};
          const i_id = "${{ inputs.item_id }}";
          const field_id = "${{ inputs.single_select_field_id }}";
          const ss_option_id = "${{ inputs.single_select_option_id }}";

          const query = `
            query {
              organization(login: "${org}") {
                projectV2(number: ${p_number}) {
                  id
                  fields(first: 25) {
                    nodes {
                      ... on ProjectV2SingleSelectField {
                        id
                        options {
                          id
                        }
                      }
                    }
                  }
                }
              }
            }
          `;

          const result = await github.graphql(query);
          const project = result.organization.projectV2;

          const field = project.fields.nodes.find(
            (f) => f.id === field_id
          );

          const option = field.options.find(
            (opt) => opt.id === ss_option_id
          );

          let item = null;
          let cursor = null;
          let hasNextPage = true;
          while (hasNextPage && !item) {
            const itemQuery = `
              query($org: String!, $project: Int!, $after: String) {
                organization(login: $org) {
                  projectV2(number: $project) {
                    items(first: 100, after: $after) {
                      pageInfo {
                        hasNextPage
                        endCursor
                      }
                      nodes {
                        id
                        fieldValues(first: 25) {
                          nodes {
                            ... on ProjectV2ItemFieldSingleSelectValue {
                              field {
                                ... on ProjectV2SingleSelectField {
                                  id
                                }
                              }
                              optionId
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;

            const res = await github.graphql(itemQuery, {
              org,
              project: p_number,
              after: cursor
            });

            const items = res.organization.projectV2.items;
            cursor = items.pageInfo.endCursor;
            hasNextPage = items.pageInfo.hasNextPage;

            item = items.nodes.find(i => i.id === i_id );
          }

          const currentStatusValue = item.fieldValues.nodes.find(
            (f) => f.field?.id === field.id
          );

          if (currentStatusValue?.optionId === option.id) {
            core.setFailed("Item has already provided option value");
          }
